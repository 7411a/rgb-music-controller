name: Build RGB Controller App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      working-directory: ./mobile-app
      run: flutter pub get
      
    - name: Analyze Flutter code
      working-directory: ./mobile-app
      run: flutter analyze
      
    - name: Run Flutter tests
      working-directory: ./mobile-app
      run: flutter test
      
    - name: Build Android APK
      working-directory: ./mobile-app
      run: flutter build apk --release
      
    - name: Build Android App Bundle
      working-directory: ./mobile-app
      run: flutter build appbundle --release
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: mobile-app/build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: mobile-app/build/app/outputs/bundle/release/app-release.aab

  build-web:
    name: Build Web App
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      working-directory: ./mobile-app
      run: flutter pub get
      
    - name: Build Web App
      working-directory: ./mobile-app
      run: flutter build web --release
      
    - name: Upload Web artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-app
        path: mobile-app/build/web/

  create-release:
    name: Create Release
    needs: [build-android, build-web]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./artifacts/
        
    - name: Download AAB artifact
      uses: actions/download-artifact@v4
      with:
        name: android-aab
        path: ./artifacts/
        
    - name: Download Web artifact
      uses: actions/download-artifact@v4
      with:
        name: web-app
        path: ./artifacts/web/
        
    - name: Get version from pubspec.yaml
      id: version
      run: |
        version=$(grep '^version:' mobile-app/pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
        echo "version=$version" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: RGB Controller v${{ steps.version.outputs.version }}
        body: |
          # RGB Controller v${{ steps.version.outputs.version }}
          
          ## ðŸ“± Downloads
          - **Android APK**: Direct installation file
          - **Android AAB**: For Google Play Store
          - **Web App**: Run in browser
          
          ## âœ¨ Features
          - ESP32 RGB LED strip control
          - 256 custom pattern steps
          - Music reactive mode
          - Real-time WebSocket communication
          - Dark theme interface
          
          ## ðŸ“‹ Requirements
          - ESP32 with uploaded firmware
          - WS2812B LED strip
          - Android 5.0+ or iOS 12.0+
          
          ## ðŸš€ Installation
          1. Download the APK file
          2. Enable "Unknown sources" in Android settings
          3. Install the APK
          4. Connect to your ESP32 and enjoy!
        files: |
          ./artifacts/app-release.apk
          ./artifacts/app-release.aab
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}